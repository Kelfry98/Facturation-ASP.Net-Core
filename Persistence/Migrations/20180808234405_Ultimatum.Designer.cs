// <auto-generated />
using System;
using BusinessLogic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusinessLogic.Migrations
{
    [DbContext(typeof(BusinessLogicDbContext))]
    [Migration("20180808234405_Ultimatum")]
    partial class Ultimatum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Buy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateBuy");

                    b.Property<int>("IdClient");

                    b.Property<int>("IdUser");

                    b.Property<int>("TotalArticle");

                    b.Property<double>("TotalBuy");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdUser");

                    b.ToTable("Buys");
                });

            modelBuilder.Entity("Model.BuyProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdBuy");

                    b.Property<int>("IdProduct");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quatity");

                    b.HasKey("Id");

                    b.HasIndex("IdBuy");

                    b.HasIndex("ProductId");

                    b.ToTable("BuyProducts");
                });

            modelBuilder.Entity("Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandProduct")
                        .HasMaxLength(30);

                    b.Property<string>("Category")
                        .HasMaxLength(30);

                    b.Property<int>("IdProvider");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<double>("Price");

                    b.Property<int>("Quatity");

                    b.HasKey("Id");

                    b.HasIndex("IdProvider");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Model.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("NameCompany")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("Authorize");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.Buy", b =>
                {
                    b.HasOne("Model.Client", "Clients")
                        .WithMany()
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.User", "Users")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.BuyProduct", b =>
                {
                    b.HasOne("Model.Buy", "Buy")
                        .WithMany()
                        .HasForeignKey("IdBuy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Model.Product", b =>
                {
                    b.HasOne("Model.Provider", "Providers")
                        .WithMany()
                        .HasForeignKey("IdProvider")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
